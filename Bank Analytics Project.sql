Create database project;
USE project;

select * from finance_1;
select * from finance_2;

ALTER TABLE finance_1 
MODIFY COLUMN issue_d date;

ALTER TABLE FINANCE_2 
MODIFY COLUMN LAST_PYMNT_D DATE;

#Q.1 - YEAR WISE LAON AMOUNT STATS

SELECT 
year(ISSUE_D) AS `YEAR`,
SUM(LOAN_AMNT) AS 'LOAN_AMOUNT'
FROM FINANCE_1 
GROUP BY YEAR 
ORDER BY YEAR;


#Q.2 - GRADE AND SUB_GRADE WISE REVOL_BAL

SELECT
F1.GRADE,
F1.SUB_GRADE,
SUM(REVOL_BAL) AS "REVOL_BAL" 
FROM FINANCE_1 AS F1 
JOIN FINANCE_2 AS F2 USING(ID)
GROUP BY F1.GRADE,F1.SUB_GRADE 
ORDER BY F1.GRADE;

#Q.3 - TOTAL PAYMENT FOR VERIFIED STATUS V/S TOTAL PAYMNET FOR NON-VERIFIED STATUS

SELECT 
F1.VERIFICATION_STATUS,
ceiling((SUM(F2.TOTAL_PYMNT))) AS TOTAL_PAYMENT 
FROM FINANCE_1 AS F1 
JOIN FINANCE_2 AS F2 USING(ID) 
WHERE VERIFICATION_STATUS IN ( 'VERIFIED', 'NOT VERIFIED')
GROUP BY VERIFICATION_STATUS 
ORDER BY TOTAL_PAYMENT ;

#Q.4 - STATE WISE AND LAST CREDIT PULL DATE WISE LOAN STATUS

SELECT 
F1.ADDR_STATE AS STATE,
F2.LAST_CREDIT_PULL_D,
F1.LOAN_STATUS 
FROM FINANCE_1 AS F1 
JOIN FINANCE_2 AS F2 USING (ID)
ORDER BY ADDR_STATE,LAST_CREDIT_PULL_D;


SELECT 
F1.ADDR_STATE AS STATE,
LAST_CREDIT_PULL_D,
F1.LOAN_STATUS AS STATUS,
COUNT(LOAN_STATUS)
FROM FINANCE_1 AS F1 
JOIN FINANCE_2 AS F2 USING (ID)
GROUP BY ADDR_STATE,loan_status,LAST_CREDIT_PULL_D 
ORDER BY ADDR_STATE;

#Q.5 - HOME OWNERSHIP VS LAST PAYMNET DATE STATS

SELECT 
F1.HOME_OWNERSHIP,
F2.LAST_PYMNT_D 
FROM FINANCE_1 AS F1 
JOIN FINANCE_2 AS F2 USING(ID)
ORDER BY home_ownership;


SELECT
F1.home_ownership,
F2.last_pymnt_d,
ceiling((sum(last_pymnt_amnt))) as total_amount
FROM finance_1 AS F1
JOIN finance_2 AS F2 USING(ID)
GROUP BY home_ownership, last_pymnt_d
ORDER BY home_ownership,last_pymnt_d ;


--------------------------------- ADDITIONAL INFO ---------------------------------------
-------- AVERAGE LOAN STATS ----------
SELECT
ROUND(AVG(LOAN_AMNT))
FROM finance_1;

------- TOTAL FUNDED AMOUNT ----------
SELECT
SUM(FUNDED_AMNT)
FROM finance_1;

------- AVERAGE ANNUAL INCOME --------
SELECT
ROUND(AVG(ANNUAL_INC)) 
FROM finance_1;















